AWSTemplateFormatVersion: '2010-09-09'
Description: The template used to create an ECS Service from the ECS Console.
Parameters:
  ECSClusterName:
    Type: String
    Default: api_neoris
  SecurityGroupIDs:
    Type: CommaDelimitedList
    Default: sg-040cc6f323c66bb76
  SubnetIDs:
    Type: CommaDelimitedList
    Default: subnet-083529006833f0fe1,subnet-0156af61c53235e54,subnet-0aa180bb582e17a4b,subnet-0ff7a399d1fbeb253,subnet-0fb815ccfe4e6a5f1,subnet-03e069ae2d138d534
  VpcID:
    Type: String
    Default: vpc-0a27e6af4d041166f
  LoadBalancerName:
    Type: String
    Default: api-neoris-alb
Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName:
        Ref: ECSClusterName
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      Configuration:
        ExecuteCommandConfiguration:
          Logging: DEFAULT
      ServiceConnectDefaults:
        Namespace: api_neoris
      Tags:
        - Key: app-code
          Value: api_neoris
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: api_neoris
      CapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Base: 0
          Weight: 1
      TaskDefinition: arn:aws:ecs:us-east-1:665137097118:task-definition/api_neoris_task_ecs:1
      ServiceName: api_neoris_service
      SchedulingStrategy: REPLICA
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: api_neoris_01
          ContainerPort: 3000
          LoadBalancerName:
            Ref: AWS::NoValue
          TargetGroupArn:
            Ref: TargetGroup
      HealthCheckGracePeriodSeconds: '30'
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            Ref: SecurityGroupIDs
          Subnets:
            Ref: SubnetIDs
      PlatformVersion: LATEST
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      DeploymentController:
        Type: ECS
      ServiceConnectConfiguration:
        Enabled: false
      Tags:
        - Key: app-code
          Value: api_neoris
      PropagateTags: SERVICE
      EnableECSManagedTags: true
    DependsOn:
      - Listener
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Name: api-neoris-alb
      SecurityGroups:
        Ref: SecurityGroupIDs
      Subnets:
        Ref: SubnetIDs
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /
      Name: api-neoris-targetgroup
      Port: 80
      Protocol: HTTP
      TargetType: ip
      HealthCheckProtocol: HTTP
      VpcId:
        Ref: VpcID
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: TargetGroup
      LoadBalancerArn:
        Ref: LoadBalancer
      Port: 80
      Protocol: HTTP
  AutoScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: '2'
      MinCapacity: '1'
      ResourceId: service/api_neoris/api_neoris_service
      RoleARN: >-
        arn:aws:iam::665137097118:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
    DependsOn:
      - ECSService
  AutoScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: api-neoris-policy-asg
      PolicyType: TargetTrackingScaling
      ResourceId: service/api_neoris/api_neoris_service
      ScalingTargetId:
        Ref: AutoScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        DisableScaleIn: false
        ScaleInCooldown: '300'
        ScaleOutCooldown: '300'
        TargetValue: '90'
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
Outputs:
  ECSCluster:
    Description: The created cluster.
    Value:
      Ref: ECSCluster
  ClusterName:
    Description: The cluster used to create the service.
    Value:
      Ref: ECSClusterName
  ECSService:
    Description: The created service.
    Value:
      Ref: ECSService
  LoadBalancer:
    Description: The created load balancer.
    Value:
      Ref: LoadBalancer
  Listener:
    Description: The created listener.
    Value:
      Ref: Listener
  TargetGroup:
    Description: The created target group.
    Value:
      Ref: TargetGroup   
  AutoScalingPolicy:
    Value:
      Ref: AutoScalingPolicy         
      
